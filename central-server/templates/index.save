<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>System Metrics Dashboard</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <style>
        #notifications {
            position: fixed;
            top: 10px;
            right: 10px;
            background: red;
            color: white;
            padding: 10px;
            display: none;
            font-size: 16px;
            border-radius: 5px;
        }
        .threshold-container {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>

<h2>System Metrics Dashboard</h2>

<!-- Threshold Adjustment Section -->
<div class="threshold-container">
    <label>CPU Threshold (%):</label>
    <input type="number" id="cpuThreshold" min="0" max="100" value="80">
    <label>Memory Threshold (%):</label>
    <input type="number" id="memoryThreshold" min="0" max="100" value="75">
    <label>Disk Threshold (%):</label>
    <input type="number" id="diskThreshold" min="0" max="100" value="90">
    <button onclick="saveThresholds()">Save Thresholds</button>
</div>

<!-- Notification Box -->
<div id="notifications"></div>

<div id="cpuChart"></div>
<div id="memChart"></div>
<div id="diskChart"></div>
<div id="loadChart"></div>

<script>
function saveThresholds() {
    localStorage.setItem("cpuThreshold", document.getElementById("cpuThreshold").value);
    localStorage.setItem("memoryThreshold", document.getElementById("memoryThreshold").value);
    localStorage.setItem("diskThreshold", document.getElementById("diskThreshold").value);
    alert("Thresholds Saved!");
}

function loadThresholds() {
    document.getElementById("cpuThreshold").value = localStorage.getItem("cpuThreshold") || 80;
    document.getElementById("memoryThreshold").value = localStorage.getItem("memoryThreshold") || 75;
    document.getElementById("diskThreshold").value = localStorage.getItem("diskThreshold") || 90;
}

async function fetchMetrics() {
    try {
        const response = await fetch('/history');
        const data = await response.json();

        if (!Array.isArray(data) || data.length === 0) {
            console.error("No data received from /history API.");
            return;
        }

        const timestamps = data.map(d => d.timestamp);
        const cpuData = data.map(d => d.cpu);
        const memoryData = data.map(d => d.memory);
        const diskData = data.map(d => d.disk);
        const loadData = data.map(d => d.load1);

        // Get user-defined thresholds
        const cpuThreshold = parseFloat(localStorage.getItem("cpuThreshold")) || 80;
        const memoryThreshold = parseFloat(localStorage.getItem("memoryThreshold")) || 75;
        const diskThreshold = parseFloat(localStorage.getItem("diskThreshold")) || 90;

        // Get latest values
        const latestCpu = cpuData[cpuData.length - 1];
        const latestMemory = memoryData[memoryData.length - 1];
        const latestDisk = diskData[diskData.length - 1];

        let notificationMsg = "";
        if (latestCpu > cpuThreshold) {
            notificationMsg += `⚠️ CPU usage is high: ${latestCpu}%\n`;
        }
        if (latestMemory > memoryThreshold) {
            notificationMsg += `⚠️ Memory usage is high: ${latestMemory}%\n`;
        }
        if (latestDisk > diskThreshold) {
            notificationMsg += `⚠️ Disk usage is high: ${latestDisk}%\n`;
        }

        // Display Notification
        if (notificationMsg) {
            const notificationDiv = document.getElementById("notifications");
            notificationDiv.innerText = notificationMsg;
            notificationDiv.style.display = "block";
            setTimeout(() => { notificationDiv.style.display = "none"; }, 5000);
        }

        // Render Charts
        Plotly.newPlot('cpuChart', [{x: timestamps, y: cpuData, type: 'scatter', mode: 'lines+markers'}], {title:'CPU Usage %'});
        Plotly.newPlot('memChart', [{x: timestamps, y: memoryData, type: 'scatter', mode: 'lines+markers'}], {title:'Memory Usage %'});
        Plotly.newPlot('diskChart', [{x: timestamps, y: diskData, type: 'scatter', mode: 'lines+markers'}], {title:'Disk Usage %'});
        Plotly.newPlot('loadChart', [{x: timestamps, y: loadData, type: 'scatter', mode: 'lines+markers'}], {title:'System Load Average (1 min)'});
        
    } catch (error) {
        console.error("Error fetching data:", error);
    }
}

// Load saved thresholds when the page loads
loadThresholds();

// Fetch data on page load
fetchMetrics();

// Auto-refresh every 30 seconds
setInterval(fetchMetrics, 30000);
</script>

</body>
</html>
